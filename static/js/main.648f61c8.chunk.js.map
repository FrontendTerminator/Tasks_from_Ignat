{"version":3,"sources":["p2-homeworks/h5/Hw5.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/PreJunior2.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","message","avatar","src","comment","name","time","messageData","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","Greeting","inputClass","setNameCallback","addUser","button","span","totalUsers","GreetingContainer","setName","setError","users","length","inputName","trim","alert","addUserCallback","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","PreJunior","Error404","PreJunior2","PATH","Routes","path","exact","render","to","Header","collapsed","setCollapsed","btn","Navbar","onStyleNavlink1","setOnStyleNavlink1","onStyleNavlink2","setOnStyleNavlink2","navlinks","navlink","navlinkColor1","navlinkColor2","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.648f61c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapsed\":\"Hw5_collapsed__3Yz3W\",\"btn\":\"Hw5_btn__BHIdV\",\"navlinks\":\"Hw5_navlinks__2BhJU\",\"navlink\":\"Hw5_navlink__2rmzT\",\"button\":\"Hw5_button__jA0lT\",\"navlinkColor1\":\"Hw5_navlinkColor1__3-rm_\",\"navlinkColor2\":\"Hw5_navlinkColor2__2vVjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3nxJ0\",\"avatar\":\"Message_avatar__2fyYI\",\"comment\":\"Message_comment__kd_Og\",\"time\":\"Message_time__2urC5\",\"name\":\"Message_name__2Re0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__9K4Me\",\"error\":\"Greeting_error__1x0c6\",\"button\":\"Greeting_button__-XyEF\",\"span\":\"Greeting_span__3KpMo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1hufR\",\"errorInput\":\"SuperInputText_errorInput__1CtVJ\",\"error\":\"SuperInputText_error__6k-fY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__33x9F\",\"red\":\"SuperButton_red__3u5go\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1IS26\",\"spanClassName\":\"SuperCheckbox_spanClassName__1Zt9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1lh7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2wEyv\",\"column\":\"HW4_column__1rA44\"};","import React from \"react\";\nimport style from \"./Message.module.css\"\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={style.message}>\n            <div className={style.avatar}>\n                <img src={props.avatar}/>\n            </div>\n            <div className={style.comment}>\n                <div className={style.name}>{props.name}</div>\n                <div>{props.message}</div>\n            </div>\n            <div className={style.time}>\n                <div>{props.time}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Artem\",\n    message: \"npm start нажимал?\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`; //\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };// need to fix\n\n    return (\n        <div>\n            {props.affair.name}  {props.affair.priority}\n\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (priority: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')}; // need to fix\n    const setHigh = () => {props.setFilter('high')};\n    const setMiddle = () => {props.setFilter('middle')};\n    const setLow = () => {props.setFilter('low')};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\";\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n};\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    if (filter === \"high\") return affairs.filter(a => a.priority === 'high');\n    if (filter === \"low\") return affairs.filter(a => a.priority === 'low');\n    if (filter === \"middle\") return affairs.filter(a => a.priority === 'middle')\n\n    else return affairs; // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput: ''} ${className ? className : s.superInput}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\nconst Greeting: React.FC<GreetingPropsType> = (props) => {\r\n    const inputClass = props.error === \" Error \" ? s.error : \"\";\r\n\r\n    return (\r\n        <div>\r\n            <SuperInputText value={props.name}\r\n                            onChange={props.setNameCallback}\r\n                            className={inputClass}\r\n                            error={props.error} // обавил из дз4\r\n            />\r\n            {/*<span className={s.span}>{props.error}</span>*/}\r\n            <SuperButton onClick={props.addUser} className={s.button}>add</SuperButton>\r\n            <span className={s.span}>{props.totalUsers}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = (props) => {\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\");\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let inputName = e.currentTarget.value\r\n        setError(\"\")\r\n        setName(inputName);\r\n    };\r\n\r\n\r\n    const addUser = () => {\r\n        if ( name.trim() !== \"\") {\r\n            alert(`Hello ${name}!`)\r\n            props.addUserCallback(name)\r\n            totalUsers = totalUsers + 1\r\n        } else {\r\n            setError(\" Error \")\r\n        }\r\n        setName(\"\")\r\n    };\r\n\r\n    let totalUsers = props.users.length;\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let newUser = {_id: v1(), name: name}\r\n        setUsers([newUser, ...users]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    //className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior2() {\n    return (\n        <div>\n            {/*<HW6/>*/}\n        </div>\n    );\n}\n\nexport default PreJunior2;\n","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport PreJuniorPlus from \"./pages/PreJunior2\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    PRE_JUNIOR_PLUS: \"/pre-junior2\"\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.PRE_JUNIOR_PLUS} render={() => <PreJuniorPlus/>}/>\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React, {useState} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport s from \"./Hw5.module.css\"\n\n\nfunction Header() {\n    let [collapsed, setCollapsed] = useState<boolean>(true)\n\n    const changeCollapsed = () => {\n        setCollapsed(!collapsed)\n    }\n\n    return (\n        <div className={!collapsed ? s.collapsed : \"\"}>\n            <div className={s.btn}>\n                <button\n                    className={s.button}\n                    onClick={changeCollapsed}><MenuIcon/></button>\n            </div>\n            {!collapsed && <Navbar/>}\n        </div>\n    );\n}\n\nexport default Header;\n\n\nfunction Navbar() {\n    let [onStyleNavlink1, setOnStyleNavlink1] = useState<boolean>(true)\n    let [onStyleNavlink2, setOnStyleNavlink2] = useState<boolean>(false)\n\n    const changeStyleNavlink1 = () => {\n        setOnStyleNavlink1(true)\n        setOnStyleNavlink2(false)\n    }\n    const changeStyleNavlink2 = () => {\n        setOnStyleNavlink2(true)\n        setOnStyleNavlink1(false)\n    }\n\n    return (\n        <div className={s.navlinks}>\n            <div className={s.navlink}>\n                <NavLink\n                    onClick={changeStyleNavlink1}\n                    className={onStyleNavlink1 ? s.navlinkColor1 : \"\"}\n                    to={PATH.PRE_JUNIOR}>PreJunior</NavLink>\n            </div>\n            <div className={s.navlink}>\n                <NavLink\n                    onClick={changeStyleNavlink2}\n                    className={onStyleNavlink2 ? s.navlinkColor2 : \"\"}\n                    to={PATH.PRE_JUNIOR_PLUS}>PreJunior+</NavLink>\n            </div>\n            {/*<div className={s.navlink}><NavLink to={\"/none\"}>lol</NavLink></div>*/}\n        </div>\n    )\n}","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\n\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <HW5/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}